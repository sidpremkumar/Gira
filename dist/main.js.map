{"version":3,"file":"main.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA;AAEA,MAAMA,QAAQ,GAAGC,mBAAO,CAAC,0BAAD,CAAxB,EACA;;;AACA,MAAMC,GAAG,GAAGF,QAAQ,CAACE,GAArB,EACA;;AACA,MAAMC,aAAa,GAAGH,QAAQ,CAACG,aAA/B;;AAEA,MAAMC,IAAI,GAAGH,mBAAO,CAAC,kBAAD,CAApB;;AACA,MAAMI,GAAG,GAAGJ,mBAAO,CAAC,gBAAD,CAAnB,EAEA;AACA;;;AACA,IAAIK,UAAJ;;AAEA,SAASC,YAAT,GAAwB;AACpB;AACAD,EAAAA,UAAU,GAAG,IAAIH,aAAJ,CAAkB;AAACK,IAAAA,KAAK,EAAE,GAAR;AAAaC,IAAAA,MAAM,EAAE;AAArB,GAAlB,CAAb,CAFoB,CAIpB;;AACAH,EAAAA,UAAU,CAACI,OAAX,CAAmB,uBAAnB,EALoB,CAOpB;;AACAJ,EAAAA,UAAU,CAACK,WAAX,CAAuBC,YAAvB,GARoB,CAUpB;;AACAN,EAAAA,UAAU,CAACO,EAAX,CAAc,QAAd,EAAwB,YAAY;AAChC;AACA;AACA;AACAP,IAAAA,UAAU,GAAG,IAAb;AACH,GALD;AAMH,EAED;AACA;AACA;;;AACAJ,GAAG,CAACW,EAAJ,CAAO,OAAP,EAAgBN,YAAhB,GAEA;;AACAL,GAAG,CAACW,EAAJ,CAAO,mBAAP,EAA4B,YAAY;AACpC;AACA;AACA,MAAIC,OAAO,CAACC,QAAR,KAAqB,QAAzB,EAAmC;AAC/Bb,IAAAA,GAAG,CAACc,IAAJ;AACH;AACJ,CAND;AAQAd,GAAG,CAACW,EAAJ,CAAO,UAAP,EAAmB,YAAY;AAC3B;AACA;AACA,MAAIP,UAAU,KAAK,IAAnB,EAAyB;AACrBC,IAAAA,YAAY;AACf;AACJ,CAND,GAQA;AACA,uE","sources":["webpack://my-app/external node-commonjs \"electron\"","webpack://my-app/external node-commonjs \"path\"","webpack://my-app/external node-commonjs \"url\"","webpack://my-app/webpack/bootstrap","webpack://my-app/./electron/main.ts"],"sourcesContent":["module.exports = require(\"electron\");","module.exports = require(\"path\");","module.exports = require(\"url\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// Ref: https://tombuyse.blog/blog/using-electron-with-react-and-node\n\nconst electron = require('electron');\n// Module to control application life.\nconst app = electron.app;\n// Module to create native browser window.\nconst BrowserWindow = electron.BrowserWindow;\n\nconst path = require('path');\nconst url = require('url');\n\n// Keep a global reference of the window object, if you don't, the window will\n// be closed automatically when the JavaScript object is garbage collected.\nlet mainWindow: any;\n\nfunction createWindow() {\n    // Create the browser window.\n    mainWindow = new BrowserWindow({width: 800, height: 600});\n\n    // and load the index.html of the app.\n    mainWindow.loadURL('http://localhost:3000');\n\n    // Open the DevTools.\n    mainWindow.webContents.openDevTools();\n\n    // Emitted when the window is closed.\n    mainWindow.on('closed', function () {\n        // Dereference the window object, usually you would store windows\n        // in an array if your app supports multi windows, this is the time\n        // when you should delete the corresponding element.\n        mainWindow = null\n    })\n}\n\n// This method will be called when Electron has finished\n// initialization and is ready to create browser windows.\n// Some APIs can only be used after this event occurs.\napp.on('ready', createWindow);\n\n// Quit when all windows are closed.\napp.on('window-all-closed', function () {\n    // On OS X it is common for applications and their menu bar\n    // to stay active until the user quits explicitly with Cmd + Q\n    if (process.platform !== 'darwin') {\n        app.quit()\n    }\n});\n\napp.on('activate', function () {\n    // On OS X it's common to re-create a window in the app when the\n    // dock icon is clicked and there are no other windows open.\n    if (mainWindow === null) {\n        createWindow()\n    }\n});\n\n// In this file you can include the rest of your app's specific main process\n// code. You can also put them in separate files and require them here."],"names":["electron","require","app","BrowserWindow","path","url","mainWindow","createWindow","width","height","loadURL","webContents","openDevTools","on","process","platform","quit"],"sourceRoot":""}